name: vue
on:
  push:
    branches: [ vue ]
  workflow_dispatch:
  schedule:
    - cron: "20 23 * * *"
env:
  TZ: Asia/Shanghai

jobs:
  vue:
    runs-on: ubuntu-latest
    steps:
      - name: checkout ðŸš€
        uses: actions/checkout@v2
        with:
          repository: h7ml/tdesign
          ref: refs/heads/vue
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: setup-node ðŸš€
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Cache node modules ðŸš€
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.3.0
          run_install: false
      - name: Deploy to vercel vue2 ðŸš€
        if: github.ref == 'refs/heads/vue2'
        uses: ngduc/vercel-deploy-action@master
        with:
          vercel-cli: vercel
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.ACCESS_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VUE_ORG_ID }}
          vercel-project-id: ${{ secrets.VUE_PROJECT_ID }}
          working-directory: ./
      - name: npm script ðŸš€
        run: |
          pnpm config set registry https://registry.npmmirror.com
          pnpm install
          pnpm build
          cp -r README.md ./dist/README.md
      - name: Deploy to surge vue ðŸš€
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: 'tdesign-vue.surge.sh'
          project: './dist'
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}
      - name: Deploy to tdesign.surge.sh ðŸš€
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: 'tdesign.surge.sh'
          project: './dist'
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}
    needs: clear

  clear:
    name: clear
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ðŸš€
        uses: actions/checkout@v2
        with:
          repository: 'h7ml/Workflows-Cleaner'
      - name: Set up Python ðŸš€
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: python cache ðŸš€
        uses: actions/cache@v2
        with:
          path: "~/.cache/pip"
          key: "${{ runner.os }}-pip-cache-${{ hashFiles('setup.cfg') }}"
          restore-keys: |
            "${{ runner.os }}-pip-cache-"
            "${{ runner.os }}-pip-"
      - name: Install pipenv ðŸš€
        env:
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          EXPIRE_TIME: '1h'
        run: |
          python -m pip install --upgrade pipenv wheel
          pipenv install
          pipenv run python run.py